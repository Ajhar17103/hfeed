{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hulus\\\\Desktop\\\\hulusfeed\\\\feed\\\\src\\\\components\\\\Atomics\\\\VideoCard\\\\ProductCard.js\",\n    _s = $RefreshSig$();\n\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport api from \"../../../Api/Api\";\nimport { useEffect, useState } from \"react\";\nimport Slider from \"react-slick\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ProductCard = props => {\n  _s();\n\n  const [category, setCategories] = useState([]);\n  useEffect(() => {\n    fetchCategories();\n  }, []);\n\n  let fetchCategories = () => {\n    api.get(\"products/categories\", {\n      per_page: 20\n    }).then(response => {\n      if (response.status === 200) {\n        setCategories(response.data);\n      }\n    }).catch(error => {});\n  };\n\n  const {\n    id,\n    store,\n    images,\n    name,\n    regular_price,\n    sale_price,\n    _links\n  } = props.product;\n  const shopName = props.shop;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: shopName == store.shop_name && /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"hello I'm from \", shopName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 6\n    }, this)\n  }, void 0, false);\n};\n\n_s(ProductCard, \"Z8yJOCIvq+CHbfSWHDvF1v0fHHo=\");\n\n_c = ProductCard;\nexport default ProductCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductCard\");","map":{"version":3,"sources":["C:/Users/hulus/Desktop/hulusfeed/feed/src/components/Atomics/VideoCard/ProductCard.js"],"names":["Row","Col","api","useEffect","useState","Slider","ProductCard","props","category","setCategories","fetchCategories","get","per_page","then","response","status","data","catch","error","id","store","images","name","regular_price","sale_price","_links","product","shopName","shop","shop_name"],"mappings":";;;AAAA,OAAOA,GAAP,MAAgB,qBAAhB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,SAASC,SAAT,EAAmBC,QAAnB,QAAmC,OAAnC;AACA,OAAOC,MAAP,MAAmB,aAAnB;;;;AAGA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAG9B,QAAM,CAACC,QAAD,EAAWC,aAAX,IAA4BL,QAAQ,CAAC,EAAD,CAA1C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,eAAe;AAChB,GAFQ,EAEN,EAFM,CAAT;;AAIA,MAAIA,eAAe,GAAG,MAAM;AAC1BR,IAAAA,GAAG,CACHS,GADA,CACI,qBADJ,EAC2B;AAC1BC,MAAAA,QAAQ,EAAE;AADgB,KAD3B,EAIAC,IAJA,CAIMC,QAAD,IAAc;AAClB,UAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AACzBN,QAAAA,aAAa,CAACK,QAAQ,CAACE,IAAV,CAAb;AACH;AACF,KARA,EASAC,KATA,CASOC,KAAD,IAAW,CAAE,CATnB;AAUD,GAXD;;AAaE,QAAM;AAAEC,IAAAA,EAAF;AAAKC,IAAAA,KAAL;AAAYC,IAAAA,MAAZ;AAAmBC,IAAAA,IAAnB;AAAwBC,IAAAA,aAAxB;AAAsCC,IAAAA,UAAtC;AAAiDC,IAAAA;AAAjD,MAAyDlB,KAAK,CAACmB,OAArE;AACA,QAAMC,QAAQ,GAACpB,KAAK,CAACqB,IAArB;AAMD,sBAEE;AAAA,cAEAD,QAAQ,IAAEP,KAAK,CAACS,SAAhB,iBACC;AAAA,oCAAoBF,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAHD,mBAFF;AAoBD,CAjDD;;GAAMrB,W;;KAAAA,W;AAsDN,eAAeA,WAAf","sourcesContent":["import Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport api from \"../../../Api/Api\";\r\nimport { useEffect,useState } from \"react\"; \r\nimport Slider from \"react-slick\";\r\n\r\n\r\nconst ProductCard = (props) => {\r\n\r\n   \r\n\tconst [category, setCategories] = useState([]);\r\n\r\n\tuseEffect(() => {\r\n\t  fetchCategories();\r\n\t}, []);\r\n  \r\n\tlet fetchCategories = () => {\r\n\t  api\r\n\t\t.get(\"products/categories\", {\r\n\t\t  per_page: 20,\r\n\t\t})\r\n\t\t.then((response) => {\r\n\t\t  if (response.status === 200) {\r\n        setCategories(response.data);\r\n\t\t  }\r\n\t\t})\r\n\t\t.catch((error) => {});\r\n\t};\r\n     \r\n   const { id,store, images,name,regular_price,sale_price,_links}=props.product\r\n   const shopName=props.shop\r\n\r\n\r\n \r\n \r\n\r\n  return (\r\n     \r\n    <>\r\n  {\r\n    shopName==store.shop_name &&  (\r\n     <h1>hello I'm from {shopName}</h1>\r\n    )\r\n    \r\n    }\r\n\r\n\r\n    \r\n \r\n    \r\n        \r\n    \r\n          \r\n         \r\n    </>\r\n  );\r\n};\r\n\r\n\r\n\r\n\r\nexport default ProductCard;\r\n"]},"metadata":{},"sourceType":"module"}